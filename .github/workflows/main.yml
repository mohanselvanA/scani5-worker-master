name: SQ1 Security scans and CodeQL

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  schedule:
    - cron: '0 2 * * 1'  # Weekly scan on Mondays at 2 AM UTC

jobs:
  secret-scan:
    name:  Secret Scan with Gitleaks
    runs-on: ubuntu-latest

    steps:
      - name:  Checkout code
        uses: actions/checkout@v4

      - name:  Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        with:
          args: detect --source=. --verbose

  codeql:
    name:  CodeQL Scan
    runs-on: ubuntu-latest
    needs: secret-scan
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name:  Checkout code
        uses: actions/checkout@v4

      - name:  Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript  # Adjust if needed

      - name:  Build (No-op for static site)
        run: echo "No build step for static site"

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  sonarqube:
      name:  SonarCloud Scan
      runs-on: ubuntu-latest
      needs: codeql

      steps:
      - name:  Checkout code
        uses: actions/checkout@v4

      - name:  Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name:  Install SonarScanner
        run: |
          curl -sSLo sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
          unzip sonar-scanner.zip

      - name:  Run SonarCloud Scanner
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ./sonar-scanner-5.0.1.3006-linux/bin/sonar-scanner \
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} \
            -Dsonar.organization=${{ secrets.SONAR_ORG }} \
            -Dsonar.sources=. \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=$SONAR_TOKEN

  

  trivy:
    name:  Trivy Scan
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Trivy scan for jekyll/builder
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'image'
          image-ref: 'jekyll/builder:latest'
          format: 'table'
          severity: 'CRITICAL,HIGH'
          ignore-unfixed: true

      - name:  Fail if vulnerabilities found
        if: failure()
        run: exit 1
